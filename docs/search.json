[
  {
    "objectID": "projects/index.html",
    "href": "projects/index.html",
    "title": "Projects",
    "section": "",
    "text": "arXiv Preprint | Code\nOver the centuries, I have devoted countless hours to deciphering and translating the ancient scripts and dialects of the various peoples of Middle-earth. My goal is to gain a deeper understanding of the cultures and histories of these peoples by studying their languages. Currently, I am working on a monograph that explores the linguistic roots of the Elvish languages. Through extensive research and analysis, I hope to shed light on the connections between the different dialects of Elvish and their origins. This project has been particularly challenging, as Elvish is a complex and nuanced language, but I am determined to see it through to completion."
  },
  {
    "objectID": "projects/index.html#the-history-of-the-war-of-the-ring",
    "href": "projects/index.html#the-history-of-the-war-of-the-ring",
    "title": "Projects",
    "section": "The History of the War of the Ring",
    "text": "The History of the War of the Ring\n\narXiv Preprint | Code\nI am creating a comprehensive and detailed history of the conflict that goes beyond the surface-level events. By gathering information from a variety of sources, including my own memories, written accounts, and oral histories, I hope to shed new light on this important period in Middle-earth’s history and provide valuable insights into the motivations and actions of the various players involved.\n\nView the tutorial for this template (+ download link)"
  },
  {
    "objectID": "photography/index.html",
    "href": "photography/index.html",
    "title": "Photography",
    "section": "",
    "text": "As a wizard and scholar of Middle-earth, I have been studying the magic of the natural world for centuries. Through my self-portraits, I aim to capture the essence of my own being and reflect on my own journey through time. Each photograph is a reflection of my own experiences and emotions. Through my photography, I hope to offer a glimpse into my life as a scholar and adventurer, and inspire others to reflect on their own journeys through the world.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nView the tutorial for this template (+ download link)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to my website!",
    "section": "",
    "text": "Twitter\n  \n  \n    \n     Github\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Email\n  \n\n\n\n\nWelcome to my website!\nI am Gian the White, a renowned wizard and scholar of Middle-earth. Over the centuries, I have dedicated my life to studying the history, languages, and cultures of the peoples of Middle-earth. On this website, I offer a glimpse into my vast body of knowledge, ongoing research, and publications.\n:::\nusful link: tutorial\n\nView the tutorial for this template (+ download link)"
  },
  {
    "objectID": "cv/index.html",
    "href": "cv/index.html",
    "title": "Curriculum vitae",
    "section": "",
    "text": "Download current CV\n  \n\n\n  \n\n\nView the tutorial for this template (+ download link)"
  },
  {
    "objectID": "projects/index.html#the-languages-of-middle-earth",
    "href": "projects/index.html#the-languages-of-middle-earth",
    "title": "Projects",
    "section": "",
    "text": "arXiv Preprint | Code\nOver the centuries, I have devoted countless hours to deciphering and translating the ancient scripts and dialects of the various peoples of Middle-earth. My goal is to gain a deeper understanding of the cultures and histories of these peoples by studying their languages. Currently, I am working on a monograph that explores the linguistic roots of the Elvish languages. Through extensive research and analysis, I hope to shed light on the connections between the different dialects of Elvish and their origins. This project has been particularly challenging, as Elvish is a complex and nuanced language, but I am determined to see it through to completion."
  },
  {
    "objectID": "projects/prova.html",
    "href": "projects/prova.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Gianluca",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\n\n\n\n\n\n2 min\n\n\n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\n\nThis is a dummy blog posts\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\nJun 1, 2022\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/new_blog_post/post.html",
    "href": "posts/new_blog_post/post.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus."
  },
  {
    "objectID": "posts/new_blog_post/post.html#merriweather",
    "href": "posts/new_blog_post/post.html#merriweather",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus."
  },
  {
    "objectID": "blog/new_blog_post/post.html",
    "href": "blog/new_blog_post/post.html",
    "title": "This is a dummy blog posts",
    "section": "",
    "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus."
  },
  {
    "objectID": "blog/new_blog_post/post.html#merriweather",
    "href": "blog/new_blog_post/post.html#merriweather",
    "title": "This is a dummy blog posts",
    "section": "Merriweather",
    "text": "Merriweather\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nam suscipit est nec dui eleifend, at dictum elit ullamcorper. Aliquam feugiat dictum bibendum. Praesent fermentum laoreet quam, cursus volutpat odio dapibus in. Fusce luctus porttitor vehicula. Donec ac tortor nisi. Donec at lectus tortor. Morbi tempor, nibh non euismod viverra, metus arcu aliquet elit, sed fringilla urna leo vel purus.\n\n3 - Code"
  },
  {
    "objectID": "blog/notebook_post/prova.html",
    "href": "blog/notebook_post/prova.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Gianluca",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index_blog.html",
    "href": "index_blog.html",
    "title": "Gianluca",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\nmatplotlib demo\n\n\n\n\n\n\n\n\n\n\n\n\n1 min\n\n\n\n\n\n\n\n\nThis is a dummy blog posts\n\n\n\n\n\n\n\n123\n\n\nSecond Tag\n\n\n\n\nThis is a test post. In this post, I try out different functionalities\n\n\n\n\n\n\nJun 1, 2022\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/index_blog.html",
    "href": "blog/index_blog.html",
    "title": "Gianluca",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "archive.html",
    "href": "archive.html",
    "title": "Archive",
    "section": "",
    "text": "matplotlib demo\n\n\n\n\n\n\n\n \n\n\n\n\n\n\nThis is a dummy blog posts\n\n\n\n\n\n\n\n\n\nJun 1, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "blog/notebook_post copy/prova.html",
    "href": "blog/notebook_post copy/prova.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "blog/paradoxes/Birthday_paradox.html",
    "href": "blog/paradoxes/Birthday_paradox.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "Introduction\nProblem Definition The Birthday Paradox asks the question: what is the probability p(n) that any two people share a birthday given a group of people of size n. More specifically, we all ask how many people are required to have at least a 50% chance that two people share a birthday, that is p(n) &gt; 0.5.\nStructure of the article 1. uniform / non uniform distribution 2. mathematical derivation / simulation\nKey takeaways This a good example to illustrate the following concepts: 1. Law of Total Probability 2. Chain Rule of probability 3. permutation\n\n\nCode\nimport chaospy\nfrom tqdm import tqdm\nimport numpy as np\nimport math\nimport matplotlib.pyplot as plt\n# import scipy.special\n# from scipy.special import comb\nfrom scipy.stats import norm\nfrom math import comb\n\n\n\n\nMathematical Derivation for Uniform birthdays distribution\nusing the classical approach to probability (geometric approach) is used.\nConsider first the probability of the event ‘A’ that k people do not share a birthday: \\[ P(A) = \\frac{365}{365} * \\frac{364}{365} * \\frac{363}{365} * ... * \\frac{365-k+1}{365} = \\frac{365 !}{365^k (365-k) !} \\]\nthe same results can be derived using the binomial coefficient to calculate the number of combinations without permutations \\(V_{n r}\\): \\[ V_{n r} =\\frac{n !}{(n-k) !}=\\frac{365 !}{(365-k) !} \\] and normalising it with the total number of possible combinations \\(V_t\\): \\[ V_t =n^k=365^{k} \\] \\[ P(A) =\\frac{V_{n r}}{V_t} \\]\nThe probability of the event ‘B’ that k people share a birthday is the complement of the event ‘A’: \\[ P(B) =1-P(A) \\]\nCode and plot:\n\n\nCode\nPb = []\nNperson = 100\ntime = np.linspace(2, Nperson, Nperson-1)\n\n\n# Calculate probabilities\nfor k in range(2,Nperson+1):\n    Vnr = int(comb(365, k) * math.factorial(k)) #, exact=True, repetition=True)\n    Vt = 365**k\n    Pa = Vnr / Vt\n    Pb.append( 1 - Pa )\n\n\n\n# Find the x-value (number of people) where probability is closest to 0.5\nclosest_index = np.argmin(np.abs(np.array(Pb) - 0.5))  # Find the closest value\nx_at_0_5 = time[closest_index]\ny_at_0_5 = Pb[closest_index]\n\n# Plot the results\nplt.figure(figsize=(10, 6))\nplt.plot(time, Pb, label=\"Probability Curve\", color=\"blue\")\nplt.axvline(x=x_at_0_5, color='r', linestyle='--', label=f'P=0.5 at ~{int(x_at_0_5)} people')\nplt.scatter([x_at_0_5], [y_at_0_5], color='red')  # Highlight the point\n\n# Annotate the plot with the x-value\nplt.text(x_at_0_5 + 5, y_at_0_5, f'{int(x_at_0_5)} People', color='red', fontsize=12, ha='left')\n\n# Add labels, title, legend, and grid\nplt.xlabel('Number of People')\nplt.ylabel('Probability of At Least One Shared Birthday')\nplt.title('Birthday Paradox Probability')\nplt.legend()\nplt.grid()\n\n\nplt.show()\n\n\n\n\n\n\n\n\n\nand plot results\n\n\nMathematical Derivation for general birthdays distribution\nadd text here\n\n\nSimulation Approach for Uniform birthdays distribution\nwe first define here a the distribution functions that will be then used in the simulation. Both uniform and non-uniform.\n\n\nCode\n# Define the user distribution functions\ndef cdf(x_loc, lo, up):\n    \"\"\"Cumulative distribution function.\"\"\"\n    return (x_loc-lo)/(up-lo)\n\ndef lower(lo, up):\n    \"\"\"Lower bounds function.\"\"\"\n    return lo\n\ndef upper(lo, up):\n    \"\"\"Upper bounds function.\"\"\"\n    return up\n\n# Create the UserDistribution\nuser_distribution = chaospy.UserDistribution(\n    cdf=cdf, lower=lower, upper=upper, parameters=dict(lo=0, up=364))\n\n\n\n\n# Set up subplots with a common title and tight layout\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\nfig.suptitle(\"Custom User Distribution Visualization\", fontsize=16)\n\n# Subplot 1: Histogram of random samples\naxs[0].set_title(\"Binned Random Samples\", fontsize=12)\naxs[0].hist(user_distribution.sample(100000), bins=30, color=\"skyblue\", edgecolor=\"black\")\naxs[0].set_xlabel(\"Value\")\naxs[0].set_ylabel(\"Frequency\")\naxs[0].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Subplot 2: Probability Density Function (PDF)\nx_loc = np.linspace(-100, 500, 200)\naxs[1].set_title(\"Probability Density Function (PDF)\", fontsize=12)\naxs[1].plot(x_loc, user_distribution.pdf(x_loc), color=\"darkorange\", lw=2)\naxs[1].set_xlabel(\"Value\")\naxs[1].set_ylabel(\"Density\")\naxs[1].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Subplot 3: Cumulative Distribution Function (CDF)\naxs[2].set_title(\"Cumulative Distribution Function (CDF)\", fontsize=12)\naxs[2].plot(x_loc, user_distribution.cdf(x_loc), color=\"forestgreen\", lw=2)\naxs[2].set_xlabel(\"Value\")\naxs[2].set_ylabel(\"Cumulative Probability\")\naxs[2].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Adjust layout for better spacing\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n\n\n\n\n\n\n\n\n\n\nSimulation of uniform distribution\n\n::: {#cell-10 .cell execution_count=4}\n``` {.python .cell-code}\niteration = 1000\nNperson = 100\n\nduplicate_rate = []\n# Simulate the Birthday Paradox for group sizes 2 to 99\nfor iGroupSize in tqdm(range(2, Nperson+1)):\n    duplicates_counter = 0\n    for i in range(iteration):\n        birthdays = np.random.randint(365, size=iGroupSize)  # Randomize group birthdays (0-364)\n        # birthdays = np.clip(np.random.normal(180, 150, size=iGroupSize), 0, 364).astype(int)  # Randomize group birthdays (0-364)\n        \n        \n        uniques, counts = np.unique(birthdays, return_counts=True)  # Unique birthdays and their counts\n        duplicates = uniques[counts &gt; 1]  # Find duplicate birthdays\n        duplicates_counter += np.size(duplicates) &gt; 0  # Count if duplicates exist\n\n    duplicate_rate.append(duplicates_counter / iteration)  # Probability of a duplicate in this group size\n\n\n\n# Plot the results\nplt.figure(figsize=(10, 6))\nplt.plot(range(2, Nperson+1), duplicate_rate, color='royalblue', lw=2, label=\"Duplicate Probability Simulation\")\nplt.plot(range(2, Nperson+1), Pb, color='green', linestyle='--', lw=2, label=\"Duplicate Probability\")\n\n# Highlight where the probability exceeds 50%\nthreshold_x = np.argmax(np.array(duplicate_rate) &gt; 0.5) + 2  # Find the group size where P &gt; 0.5\nthreshold_y = duplicate_rate[threshold_x - 2]  # Corresponding probability\n\nplt.axvline(x=threshold_x, color='red', linestyle='--', label=f\"50% Probability at {threshold_x} People\")\nplt.scatter(threshold_x, threshold_y, color='red', zorder=5)  # Add point on the curve\n\n# Annotate the plot with the x-value\nplt.text(threshold_x + 5, threshold_y, f'{int(threshold_x)} People', color='red', fontsize=12, ha='left')\n\n\n# Labels and title\nplt.xlabel('Group Size (Number of People)', fontsize=14)\nplt.ylabel('Probability of At Least One Shared Birthday', fontsize=14)\nplt.title('Birthday Paradox Simulation', fontsize=16)\n\n# Grid and ticks for better readability\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.xticks(range(2, 101, 5))  # Adjust x-ticks for better clarity\nplt.yticks(np.arange(0, 1.1, 0.1))  # Adjust y-ticks\n\n# Add a legend\nplt.legend()\n\n# Show the plot\nplt.tight_layout()\nplt.show()\n\n100%|██████████| 99/99 [00:00&lt;00:00, 107.45it/s]\n\n\n\n\n\n\n\n\n:::\n\n\nCode\n\n# Parameters for the normal distribution\nmean = 180\nstd_dev = 50\nN = 100000  # Number of samples\n\n# Generate random samples from a normal distribution and clip values to [0, 364]\nsamples = np.clip(np.random.normal(mean, std_dev, size=N), 0, 364)\n\n# Set up subplots with a common title and tight layout\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\nfig.suptitle(\"Normal Distribution Visualization (Clipped to [0, 364])\", fontsize=16)\n\n# Subplot 1: Histogram of random samples\naxs[0].set_title(\"Binned Random Samples\", fontsize=12)\naxs[0].hist(samples, bins=30, color=\"skyblue\", edgecolor=\"black\")\naxs[0].set_xlabel(\"Value\")\naxs[0].set_ylabel(\"Frequency\")\naxs[0].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Subplot 2: Probability Density Function (PDF)\nx_loc = np.linspace(0, 364, 200)\naxs[1].set_title(\"Probability Density Function (PDF)\", fontsize=12)\naxs[1].plot(x_loc, norm.pdf(x_loc, mean, std_dev), color=\"darkorange\", lw=2)\naxs[1].set_xlabel(\"Value\")\naxs[1].set_ylabel(\"Density\")\naxs[1].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Subplot 3: Cumulative Distribution Function (CDF)\naxs[2].set_title(\"Cumulative Distribution Function (CDF)\", fontsize=12)\naxs[2].plot(x_loc, norm.cdf(x_loc, mean, std_dev), color=\"forestgreen\", lw=2)\naxs[2].set_xlabel(\"Value\")\naxs[2].set_ylabel(\"Cumulative Probability\")\naxs[2].grid(True, linestyle=\"--\", alpha=0.6)\n\n# Adjust layout for better spacing\nplt.tight_layout(rect=[0, 0, 1, 0.95])\nplt.show()\n\n\n\n\n\n\n\n\n\n\n\nCode\niteration = 1000\nNperson = 100\n\nduplicate_rate = []\n# Simulate the Birthday Paradox for group sizes 2 to 99\nfor iGroupSize in tqdm(range(2, Nperson+1)):\n    duplicates_counter = 0\n    for i in range(iteration):\n        # birthdays = np.random.randint(365, size=iGroupSize)  # Randomize group birthdays (0-364)\n        birthdays = np.clip(np.random.normal(180, 150, size=iGroupSize), 0, 364).astype(int)  # Randomize group birthdays (0-364)\n        \n        \n        uniques, counts = np.unique(birthdays, return_counts=True)  # Unique birthdays and their counts\n        duplicates = uniques[counts &gt; 1]  # Find duplicate birthdays\n        duplicates_counter += np.size(duplicates) &gt; 0  # Count if duplicates exist\n\n    duplicate_rate.append(duplicates_counter / iteration)  # Probability of a duplicate in this group size\n\n\n\n# Plot the results\nplt.figure(figsize=(10, 6))\nplt.plot(range(2, Nperson+1), duplicate_rate, color='royalblue', lw=2, label=\"Duplicate Probability Simulation\")\nplt.plot(range(2, Nperson+1), Pb, color='green', linestyle='--', lw=2, label=\"Duplicate Probability\")\n\n# Highlight where the probability exceeds 50%\nthreshold_x = np.argmax(np.array(duplicate_rate) &gt; 0.5) + 2  # Find the group size where P &gt; 0.5\nthreshold_y = duplicate_rate[threshold_x - 2]  # Corresponding probability\n\nplt.axvline(x=threshold_x, color='red', linestyle='--', label=f\"50% Probability at {threshold_x} People\")\nplt.scatter(threshold_x, threshold_y, color='red', zorder=5)  # Add point on the curve\n\n# Annotate the plot with the x-value\nplt.text(threshold_x + 5, threshold_y, f'{int(threshold_x)} People', color='red', fontsize=12, ha='left')\n\n\n# Labels and title\nplt.xlabel('Group Size (Number of People)', fontsize=14)\nplt.ylabel('Probability of At Least One Shared Birthday', fontsize=14)\nplt.title('Birthday Paradox Simulation', fontsize=16)\n\n# Grid and ticks for better readability\nplt.grid(True, linestyle='--', alpha=0.6)\nplt.xticks(range(2, 101, 5))  # Adjust x-ticks for better clarity\nplt.yticks(np.arange(0, 1.1, 0.1))  # Adjust y-ticks\n\n# Add a legend\nplt.legend()\n\n# Show the plot\nplt.tight_layout()\nplt.show()\n\n\n100%|██████████| 99/99 [00:00&lt;00:00, 107.63it/s]\n\n\n\n\n\n\n\n\n\nand plot results"
  },
  {
    "objectID": "blog/paradoxes/prova.html",
    "href": "blog/paradoxes/prova.html",
    "title": "matplotlib demo",
    "section": "",
    "text": "Code\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\nFigure 1: A line plot on a polar axis"
  }
]